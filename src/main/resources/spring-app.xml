<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>
	
	<aop:aspectj-autoproxy />
	<bean class="edu.hunter.modules.utils.SpringContextHolder" lazy-init="false" />

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.woo.wisper, edu.hunter.modules">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>


	<!-- JSR303 Validator定义 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="shutdown">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 连接只读数据库时配置为true， 保证安全 <property name="readOnly" value="false" /> -->
		<!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
		<property name="connectionTimeout" value="30000" />
		<!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
		<property name="idleTimeout" value="600000" />
		<!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL 
			wait_timeout参数（show variables like '%timeout%';） -->
		<property name="maxLifetime" value="1800000" />
		<!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
		<property name="maximumPoolSize" value="${jdbc.pool.maxActive}" />
	</bean>


	<!-- dev 环境 -->
	<beans profile="dev">
		<context:property-placeholder ignore-resource-not-found="true" properties-ref="properties" />
		<bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<value>classpath*:/properties/application.properties</value>
					<value>classpath*:/properties/application.dev.properties</value>
				</list>
			</property>
		</bean>
	</beans>

	<!-- prod 环境 -->
	<beans profile="prod">
		<context:property-placeholder ignore-resource-not-found="true" properties-ref="properties" />
		<bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<value>classpath*:/properties/application.properties</value>
					<value>classpath*:/properties/application.prod.properties</value>
				</list>
			</property>
		</bean>
		<!-- 初始化数据结构 -->
		<!-- <jdbc:initialize-database data-source="ds1" ignore-failures="ALL"> <jdbc:script location="classpath:sqls/structure.sql" 
			/> <jdbc:script location="classpath:sqls/data.sql" /> </jdbc:initialize-database> -->
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" /> -->
	</beans>
	
		<!-- dev 环境 -->
	<beans profile="test">
		<context:property-placeholder ignore-resource-not-found="true" properties-ref="properties" />
		<bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<value>classpath*:/properties/application.properties</value>
					<value>classpath*:/properties/application.test.properties</value>
				</list>
			</property>
		</bean>
	</beans>

</beans>